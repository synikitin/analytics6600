<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Analytics 6600 on Data Analytics 6600</title>
    <link>/analytics6600/</link>
    <description>Recent content in Data Analytics 6600 on Data Analytics 6600</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 Slava Nikitin</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/analytics6600/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Case Study 3</title>
      <link>/analytics6600/post/case3_ids/</link>
      <pubDate>Mon, 05 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/analytics6600/post/case3_ids/</guid>
      <description>&lt;div id=&#34;intrusion-detection-on-computer-networks&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Intrusion Detection on Computer Networks&lt;/h2&gt;
&lt;div id=&#34;project&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Project&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Background&lt;/strong&gt;&lt;br /&gt;
A gas utility company XYZ LLC delivers gas to residential and commercial customers across three states. The extraction and distribution infrastructure is computerized, with some computers having public access and others operated by empoyees. The lack of complete isolation of the computer network presents a cyber target of strategic value. The utility is mandated to defend the periphery of the network from the connection perspective, but has no internal monitoring of harmful, intentional or unintentional, activity. Manual monitoring is very ineffective because of high volume of data, so most of the data is currently unanalyzed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Objectives&lt;/strong&gt;&lt;br /&gt;
The primary technical objective is to develop an automated process to process a high volume of connection data to pick out security events, sort and group them. The second goal is develop a user interface that can present the algorithm output in an easily consumable form.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Benefits&lt;/strong&gt;&lt;br /&gt;
Providing an automated analysis pipeline to highlight security events will extend the visibility of the security team into the periphery of the strategic computer network and reduce time to detection of harmful activity.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Specification&lt;/strong&gt;&lt;br /&gt;
9 months of historical connection logs and ongoing stream in .json format will be provided to support the work.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;br /&gt;
Without access to labeled network data, we can formulate security event detection as anomaly detection. An anomaly is a low probability event. The historical data provides information to estimate the probability distribution of connection characteristics on the network of interest. Estimated probability distribution can be used to calculate probabilities of novel connections and compare them to a threshold to highlight anomalies.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;people&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;People&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A project manager, a data scientist and a developer from Awesome Analytics.&lt;/li&gt;
&lt;li&gt;An expert on the network data, a security analyst, devops, developers responsible for the user interface from XYZ.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;process&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Process&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Phases&lt;/strong&gt;&lt;br /&gt;
Emphasize, Define, Ideate, Prototype, Test, Implement&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security Classification&lt;/strong&gt;&lt;br /&gt;
Connection data is private; network design and roles of machines is classified.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;issues-ideas-and-principles&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Issues, Ideas and Principles&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Strong versus Weak AI&lt;/strong&gt;&lt;br /&gt;
This kind of project can be and usually is marketed as artificial intelligence (AI). A big difference is between strong AI, that is the stuff of movies, and weak AI, task-specific algorithms that have a well-defined input and output. The recent trend of AI systems is riding the massive access to data where AI is better understood as Automated Inference.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cyber Security&lt;/strong&gt;&lt;br /&gt;
Network security can be conceived around protecting confidentiality, integrity and access of data and systems. The typical activities inside security teams are vulnerability patching, alert response, hunting, and forensic analysis. Situational awareness is often the biggest deficit.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Confidentiality&lt;/strong&gt;&lt;br /&gt;
Data being private already imposes a more strict and careful approach to data and project work, but the classified data presents a choice of either getting clearance for it or steering away from it or getting some safe surrogate of it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Transfer&lt;/strong&gt;&lt;br /&gt;
The high-volume stream provides a crucial constraint on the design of the automated analysis pipeline. How much to store and how to keep up with high rate? Remembering that this is an analysis problem, not a storage problem, suggests that we can use some data for estimating and updating our estimate of the probability distribution of connection data, and simply analyze the rest.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Anomaly Detection versus Predictive Models&lt;/strong&gt;&lt;br /&gt;
Unlike the complaint classification, where there is ground truth, in security the ground truth is typically unavailable or is not collected systematically. This leads to learning probability distributions and thresholds to find lowest probability events rather than learning a relationship between input and most likely output.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Assessment of Anomaly Detection Models&lt;/strong&gt;&lt;br /&gt;
The fundamental assumption of anomaly detection is that anomalous connections are security events and security events are anomalous connections. In some domains this is clearly correct, but in security this is not obvious. The system needs to be carefully tested with penetration testing and tuned until the assumption holds. Both false positives and false negatives need to be low to have an effective system.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Improvements from User Feedback&lt;/strong&gt;&lt;br /&gt;
User feedback is the only way to test the assumption of a useful anomaly detector. Also, structured feedback is a source of missing labels, marking each connection as security or not security event. The feedback can be used to provide an additional layer of prioritization.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Algorithmic Bias&lt;/strong&gt;&lt;br /&gt;
Humans bring their own beliefs, values and temperament to judgments. Unless there is a representative sample of human judgments, data can inherit their “bias”. Hence, a system built on top of the data will also be biased.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Need for some Automation&lt;/strong&gt;&lt;br /&gt;
In high data volume conditions, automation is not a threat or luxury, it is imperative to extract any value from the collected data. In this case, picking interesting connections for further examination opens a new security analyst position.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Rate and Work Units&lt;/strong&gt;&lt;br /&gt;
Low probability events interact with data generation rate. If each data point translates into a unit of work, then very careful selection and prioritization of points is necessary. At the same time, very low probability events are hard to estimate because there is very little data there, so the thresholding may reach a certain order of magnitude where every event looks the same. The amount of work and data rate and estimation accuracy are tradeoffs in this environment.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jobs and AI&lt;/strong&gt;&lt;br /&gt;
This is a pattern of outsourcing mental work, similar to complain classification, to an automated system. The rest of investigation or hunting requires reasoning and knowledge that today only humans possess.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;relevant-r-packages&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Relevant R packages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Import&lt;/strong&gt;&lt;br /&gt;
readr, elastic, jsonlite&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Transform&lt;/strong&gt;&lt;br /&gt;
dplyr, stringr&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Visualize&lt;/strong&gt;&lt;br /&gt;
ggplot2&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Model&lt;/strong&gt;&lt;br /&gt;
ks&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Communicate&lt;/strong&gt;&lt;br /&gt;
shiny, Rmarkdown&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Automate&lt;/strong&gt;&lt;br /&gt;
R packaging system&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Case Study 2</title>
      <link>/analytics6600/post/case2/</link>
      <pubDate>Mon, 29 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/analytics6600/post/case2/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;div id=&#34;conference-proceedings-analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Conference Proceedings Analysis&lt;/h2&gt;
&lt;div id=&#34;project&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Project&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Background&lt;/strong&gt;&lt;br /&gt;
A retail company XYZ LLC prides itself on excellent customer service. One way to deliver excellence is by listening to customer complaints about their products and services collected through various channels like email or phone. Upon receiving a complaint, it is supposed to go through a classification process assigning it a product, sub-product and progressively detailed reasons for the complaint. The purpose of the classes is to organize complaints, and enable calculation of descriptive statistics and trending to get a better insight into what needs to be adjusted and how to prioritize work. However, being a large company with many and multifaceted products, the classification tree is deep and broad. During each complaint classification cycle, a complaint can pass through subtrees with options in the dozens which is a heavy cognitive load on the customer associate. The heavy load translates into slow downs, avoidance of work, missing data, poor data quality, a need for a quality assurance process, job dissatisfaction and increased turnover. All these negative side-effects undermine delivery of excellent customer service and impose extra costs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Objectives&lt;/strong&gt;&lt;br /&gt;
The central task is to make the classification process much easier to reduce or eliminate its negative side-effects. Provide a wrapper around the code such that it can integrate into the existing user interface and improve the current classification process.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Benefits&lt;/strong&gt;&lt;br /&gt;
Making the classification process substantially easier will lead to&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Specification&lt;/strong&gt;&lt;br /&gt;
Few years of complaints data in .csv will be provided to support the work.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;br /&gt;
Use the data generated by the complaint classification process to develop a predictive model that can take complaint text and predict class probabilities. Computed class probabilities can be used to sort the classes and only show the most likely batch. This will produce a dynamic classification process that will be sensitive to the information in the complaint and guide the customer associate towards the most fitting classes without completely removing them out of the process.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;people&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;People&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A project manager, a data scientist and a developer from Awesome Analytics.&lt;/li&gt;
&lt;li&gt;An expert on the complaint data and the user interface, a customer associate, developers responsible for the user interface from XYZ.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;process&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Process&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Phases&lt;/strong&gt;&lt;br /&gt;
Emphasize, Define, Ideate, Prototype, Test, Implement&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Communication&lt;/strong&gt;&lt;br /&gt;
Weekly meetings will take place to collect feedback.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security Classification&lt;/strong&gt;&lt;br /&gt;
Data is private.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;issues-ideas-and-principles&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Issues, Ideas and Principles&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;&lt;br /&gt;
A predictive model integrated into an interactive user interface rather than understanding or automated actions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Confidentiality&lt;/strong&gt;&lt;br /&gt;
Complaint data has personally identifying as well as business sensitive information.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Transfer&lt;/strong&gt;&lt;br /&gt;
Private data requires a more serious consideration of data transfer. For example, working on site or placing a machine in client’s environment or establishing direct, encrypted transfer.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Management&lt;/strong&gt;&lt;br /&gt;
With confidential data you have to worry about access, provinence, and potentially destruction. A good access principle to follow is limitting access project materials only to those actually working the projects. Provinence involves recording the trail of the data as it moves around and is modified. Finally, data destruction upon project completion is a good, risk-averse practice.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Formats&lt;/strong&gt;&lt;br /&gt;
A .csv format is really typical, but can be generated in various ways as there is no commonly agreed upon specification. Commas and new line characters and double quotes can appear in text fields, and without properly quoting them, the separation of cells or lines can get lost.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Complex Transformations&lt;/strong&gt;&lt;br /&gt;
How to transform a piece of text into a class, especially when text is highly variable and there are hundreds of classes? No intuitive answer comes - the problem is complex, and manually constructed rules will do poorly and take enourmous time to develop. Data, however, contains many examples of what class was assigned to a piece of text. Statistical models can be used to represent a large number of possible relationship between text and class, and then data be used to find the relationship most consistent with data.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Assessment of Predictive Models&lt;/strong&gt;&lt;br /&gt;
We can split the data into two, one part for learning a relationship of text and class consistent with data, another for testing its accuracy. We could calculate overall accuracy as well as class specific accuracies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Interpretability of Predictive Models&lt;/strong&gt;&lt;br /&gt;
Complex non-linear mathematical functions are learned to represent the relationship of text and class. What if someone wanted to know what pieces of information in the complaint contributed to it being classified in some way? Interpretability is an important aspect of understanding the learned model and providing reasons for the automated predictions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Conditions of Application&lt;/strong&gt;&lt;br /&gt;
In this case, applying the predictive model to the whole classification tree is unnecessary and not possible from the beginning. In this project, the most impact can be achieved by considering subtrees that have more than 5 options, have sufficient data and can be handled accurately by the model.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kinds and Gradations of Automation&lt;/strong&gt;&lt;br /&gt;
This is an example of outsourcing some mental work to a machine. If a task is repeatable and can be broken down into steps, then we can think of sharing those steps between a human and a machine, with the balance roughly giving you the amount of automation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Improvement over Time&lt;/strong&gt; A system built on data can often improve with more data. In this case, predictive models will get more accurate, more parts of the classification tree can be reached systematically by a customer associate and generate data to build additional models. By putting some predictive models into a system sets a company on a trajectory of improvements.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;relevant-r-packages&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Relevant R packages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Import&lt;/strong&gt;&lt;br /&gt;
readr&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Transform&lt;/strong&gt;&lt;br /&gt;
dplyr, stringr, text2vec&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Visualize&lt;/strong&gt;&lt;br /&gt;
ggplot2&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Model&lt;/strong&gt;&lt;br /&gt;
xgboost, lime&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Automate&lt;/strong&gt; R packaging system&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;!-- BLOGDOWN-HEAD




/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
    <item>
      <title>Case Study 1</title>
      <link>/analytics6600/post/case1_abstracts/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/analytics6600/post/case1_abstracts/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;div id=&#34;conference-proceedings-analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Conference Proceedings Analysis&lt;/h2&gt;
&lt;div id=&#34;project&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Project&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Background&lt;/strong&gt;&lt;br /&gt;
A health care company XYZ LLC hosts conferences on novel variants of cancer and technologies meant to detect it early. Scientists in charge of it are responsible for preparing a summary presentation of past and present research.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Objectives&lt;/strong&gt;&lt;br /&gt;
Understand origins of authors, co-author network, novel variants of cancer, clusters of abstracts based on similar topics, trends across the last decade in most prominent research topics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Benefits&lt;/strong&gt;&lt;br /&gt;
Maintain reputation of thought leadership in the area of cancer research, advance knowledge by submitting a paper into a proceedings journal based on the trends, come up with a repeatable, automated process, potentially &lt;strong&gt;reuse&lt;/strong&gt; the process as a service to meet the demand of understanding ongoing trends in technology.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Specification&lt;/strong&gt;&lt;br /&gt;
Data from prior conferences in .docx, .pdf, .xlsx, .csv will be provided to support the work.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;br /&gt;
Visuals for the 5 objectives will be provided with appropriate resolution as .jpeg images. Code underlying all the data preparation and analysis will be provided, too.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;people&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;People&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A project manager and a data scientist from Awesome Analytics.&lt;/li&gt;
&lt;li&gt;A cancer scientist from the client to guide the design and aesthetic features of the visuals.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;process&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Process&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Phases&lt;/strong&gt;&lt;br /&gt;
Emphasize, Define, Ideate, Prototype, Test, Implement&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Communication&lt;/strong&gt;&lt;br /&gt;
Weekly meetings will take place to collect feedback.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security Classification&lt;/strong&gt;&lt;br /&gt;
Data is public.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;issues-ideas-and-principles&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Issues, Ideas and Principles&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;&lt;br /&gt;
Understanding of conference authors and research trends, not simple data summaries or prediction or technology. Maybe a technology - a program rerun each conference.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Confidentiality&lt;/strong&gt;&lt;br /&gt;
Transmission of public data does not pose much issue: email is a valid method. Things get more complicated with private or classified data.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Formats&lt;/strong&gt;&lt;br /&gt;
Text data can be stored on disk using many formats, each requiring its own parsing methods to convert text into a common representation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Encoding&lt;/strong&gt;&lt;br /&gt;
Technical abstracts are submitted from around the world. Text in abstracts contains many special symbols and letters from other alphabets. These are handled by an expanded character set, called UTF-8, but may require special handling when cleaning text.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Collection&lt;/strong&gt;&lt;br /&gt;
Generated by humans with a non-standard process which creates much nuisance variation in data, say how names and countries are written down, that complicates data preparation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sources of variation&lt;/strong&gt;&lt;br /&gt;
Key idea in dealing with much data, including messy text, is to think of it in terms of variable components that combine together to make the observed data.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Automated Tools vs Manual Rules&lt;/strong&gt;&lt;br /&gt;
Data with nuisance variation breaks assumptions of automated tools and often requires creation of manually crafted rules, one by one, through trial and error. Regular expression and dictionaries are key technologies. This, of course, slows down work quite a bit.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Simple versus Complex Transformations&lt;/strong&gt;&lt;br /&gt;
The questions of author origins and cooperation can be obtained through straightforward manipulations of the provided data. However, finding novel variants of cancer, clustering abstracts by topic or trending research topics over time is not as clear-cut. The later set of problems requires statistical models to give us algorithms that can output probabilities, topics, and clusters.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;relevant-r-packages&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Relevant R packages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Data&lt;/strong&gt;&lt;br /&gt;
state.abb, mapdata&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Import&lt;/strong&gt;&lt;br /&gt;
readxl, readr, pdftools&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tidy&lt;/strong&gt;&lt;br /&gt;
tidytext, tidygraph&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Transform&lt;/strong&gt;&lt;br /&gt;
xml2, dplyr, stringr&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Visualize&lt;/strong&gt;&lt;br /&gt;
ggplot2, ggrepel&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Model&lt;/strong&gt;&lt;br /&gt;
topicmodels&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Communicate&lt;/strong&gt;&lt;br /&gt;
Rmarkdown&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;!-- BLOGDOWN-HEAD




/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>/analytics6600/post/intro/</link>
      <pubDate>Mon, 08 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/analytics6600/post/intro/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;div id=&#34;outline&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Outline&lt;/h2&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Introductions&lt;/li&gt;
&lt;li&gt;Analytics as a Layer of Digital Transformations&lt;/li&gt;
&lt;li&gt;Introduction to R&lt;/li&gt;
&lt;li&gt;Installation of RStudio&lt;/li&gt;
&lt;li&gt;Demo of Programming in RStudio&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;data-science-as-a-layer-of-digital-transformation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data Science as a Layer of Digital Transformation&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://synikitin.github.io/analytics6600/img/digital.png&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;cycles-of-innovation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Cycles of Innovation&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/3/33/Spiral_model_%28Boehm%2C_1988%29.png&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;problem-driven-innovation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Problem-Driven Innovation&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://synikitin.github.io/analytics6600/img/design_circle.png&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;analytics-producer&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Analytics Producer:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Roles: Data scientists, software developers, infrastructure engineers, business analysts, subject matter experts&lt;/li&gt;
&lt;li&gt;Backgrounds: Math/stats, social sciences, economics, computer science&lt;/li&gt;
&lt;li&gt;Skills: Math/statistics, communications, domain expertise, “end-to-end”&lt;/li&gt;
&lt;li&gt;Key Attributes: Curiosity, a desire to learn, a willingness to get hands dirty&lt;/li&gt;
&lt;li&gt;Culture: Work in close proximity, exposure to variety of problems, safe to question, acceptable failure rate&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;analytics-client&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Analytics Client:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Available data and an SME (can someone plug in a laptop and query the data?)&lt;/li&gt;
&lt;li&gt;Business lead (provides guidance, removes roadblocks, serves as sounding board)&lt;/li&gt;
&lt;li&gt;Quantifying the value to be created&lt;/li&gt;
&lt;li&gt;Understanding the existing workflow (flowcharts are your friend)&lt;/li&gt;
&lt;li&gt;Access to a real live user in the wild&lt;/li&gt;
&lt;li&gt;Well-defined scope, in writing&lt;/li&gt;
&lt;li&gt;Frequent communications with feedback (design sessions)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;data-science-cycle&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data Science Cycle&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://synikitin.github.io/analytics6600/img/data-science.png&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;application-to-wait-time-prediction-project&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Application to Wait Time Prediction Project&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://synikitin.github.io/analytics6600/img/waittime.png&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;technical-ecosystem&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Technical Ecosystem&lt;/h2&gt;
&lt;p&gt;Overview of R and Rstudio ecosystem: &lt;a href=&#34;http://fg2re.sellorm.com&#34; class=&#34;uri&#34;&gt;http://fg2re.sellorm.com&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;


&lt;!-- BLOGDOWN-HEAD




/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>/analytics6600/post/guidelines/</link>
      <pubDate>Mon, 10 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/analytics6600/post/guidelines/</guid>
      <description>&lt;div id=&#34;sections-and-rubric&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Sections and Rubric&lt;/h2&gt;
&lt;p&gt;You can get total of 60 points for the project. Here is the break down:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Document settings (1 point)&lt;/strong&gt;&lt;br /&gt;
Fix your upper functions. Put the bit of code below at the top of your Rmarkdown document (replace what’s there be default). Note the self_contained and code_folding options. Also, note the indentation, it is necessary for the options to take effect.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;title: &amp;quot;Project&amp;quot;
author: &amp;quot;Your Name&amp;quot;
date: &amp;quot;April 10, 2017&amp;quot;
output:  
  html_document:    
    self_contained: true   
    code_folding: hide   &lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Knitting (1 point)&lt;/strong&gt;&lt;br /&gt;
Make sure knitting works. Given data and your .Rmd, I should be able to knit a self-contained html with code folding without any errors. The .html file is what you will use for your presentation, so you must be able to knit your .Rmd file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Context (5 points)&lt;/strong&gt;&lt;br /&gt;
Describe the domain or motivation behind the project. Why is it interesting or useful? Where does the data come from? What questions or problems, at a high level, you want to solve? This section needs to set expectations and tune the intuitions of readers before they see your analyses or function code. At least 5 sentences.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Data (5 points)&lt;/strong&gt;&lt;br /&gt;
Provide a thorough description of data. It should include source (with hyperlink if possible), format of file, number of data structures, dimensions, variable meanings (in groups if there are too many variables). Print out of a few rows of data. For example,&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                    mpg cyl disp  hp drat    wt  qsec vs am gear carb
## Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
## Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
## Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
## Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
## Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2
## Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Data prep details (5 points)&lt;/strong&gt;&lt;br /&gt;
Discuss issues with the raw data. For example, problems with column names, data types, missing values, data being split among multiple file, or important variables being stored in column headers. Or maybe what you did to make the data nicer to work with.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Core (30 points)&lt;/strong&gt;&lt;br /&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Questions and Answers&lt;/strong&gt;&lt;br /&gt;
Separate your question-answer combinations into separate sections. State each question clearly. For each question, provide reasons for why you are calculating some number or making a chart to answer a specific question (why this and not something else). You should try to do a mixture of question-answers where you do calculations, like means, explore the full distribution of a variable, maybe with a histogram, and explore relationships among variables, using scatterplots and ggplot’s faceting to group data by a categorical variable. Provide a summary statement for each question describing which packages you used and for what functionality.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;br /&gt;
Separate your functions into separate sections. Describe what the initial input is and what the final output is. Then describe the set of functions that you will write and what each does and how they fit together into a larger program that allows you to automate your task. For each function you code, provide high level logical version.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;func &amp;lt;- function(x) {
  I create a container for outputs based on length of x
  I run a loop over columns of x
  Inside the loop I calculate a mean
  After the loop is done I return means for all columns
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also, for each function, describe each input and output in terms of what R type of data and dimensions are expected, and what the overall purpose of the function is. You can place these in comments like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Purpose: This function does awesome stuff
# Input: x is a data frame of mixed types, but with more rows than columns
# Output: y is a double vector of summary statistics for each column
func &amp;lt;- function(x) {
  y &amp;lt;- something(x)
  return(y)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Provide a summary statement for each function describing which packages you used and for what functionality.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;7&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tables and Charts (3 points)&lt;/strong&gt;&lt;br /&gt;
Make well-formated tables and charts. See a suggestion for tables below using &lt;code&gt;kable&lt;/code&gt; function from &lt;strong&gt;knitr&lt;/strong&gt; package. For charts, use &lt;strong&gt;ggplot2&lt;/strong&gt;. Make sure to fix title, axes labels, colors, legend and theme, if any. Remember that you can control every feature of the plot and make it look very nice. I only expect cleaned up displays, not professionally designed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Organization (5 points)&lt;/strong&gt;&lt;br /&gt;
Text and code and its output should be in readable, formatted way. Look at the formatting guideliness below for pointers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Presentation (5 points)&lt;/strong&gt;&lt;br /&gt;
Walk the class through your analysis or automation problem. Talk about the context, data quality and how you prepared it. Discuss what questions you had, how you approached answering them, and what the answer was. If you answered many, pick a couple that you find most interesting. Similarly, if you had an automation project, discuss what was the initial input and final output; walk through the sequence of functions that need to be used to get your from initial input to final output. Finally, mention what packages and maybe the crucial functions that were necessary to complete your project.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;formatting-guidelines&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Formatting Guidelines&lt;/h2&gt;
&lt;p&gt;The markdown file should be formatted in a readable form. Here are some rules I expect you apply:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Make a special R chunk right after the setup chunk where you load all your packages.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use headings for sections with &lt;code&gt;## Heading&lt;/code&gt; syntax. You control the size with the number of &lt;code&gt;#&lt;/code&gt;, where more is smaller:&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Break up your text with one return into blocks&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Statements here.
SPACE
Statements here.&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Separate your code into separate r-chunks that divide code into logical units, like importing and preparing data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Surround r-chunks with one return on either side&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SPACE
&amp;#39;&amp;#39;&amp;#39;{r}
x &amp;lt;- 1:3
&amp;#39;&amp;#39;&amp;#39;
SPACE&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You should make your code as readable as possible. Break lines after 80 characters (shown in the bottom left corner). Also, read over our book’s suggested style guide for other formatting issues &lt;a href=&#34;http://adv-r.had.co.nz/Style.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use markdown formatting for lists if you need to enumerate something. For example,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- line one
- line two
    1. line two.one
    2. line two.two&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Include external images with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;![](url/or/disk/path/to/your/image)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Include urls with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[word or phrase to hyperlink](url)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make simple tables with package &lt;strong&gt;knitr&lt;/strong&gt; using function &lt;code&gt;kable&lt;/code&gt;, for example:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::kable(head(mtcars))&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mpg&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;cyl&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;disp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;hp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;drat&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;wt&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;qsec&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;vs&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;am&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;gear&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;carb&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Mazda RX4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;160&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;110&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.90&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.620&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16.46&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Mazda RX4 Wag&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;160&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;110&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.90&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.875&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17.02&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Datsun 710&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;22.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;108&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;93&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.85&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.320&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18.61&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Hornet 4 Drive&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;258&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;110&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.08&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.215&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;19.44&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Hornet Sportabout&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;360&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;175&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.440&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17.02&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Valiant&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;225&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;105&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.76&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.460&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;20.22&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol start=&#34;11&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Format your charts to have nice axis labels and a title and any legends that are useful. Check out assignment 2 for some code examples. For example,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(aes(rating, ..prop..)) +
  geom_bar() +
  facet_grid(genre ~ occupation) +
  labs(x = &amp;quot;a&amp;quot;, y = &amp;quot;b&amp;quot;, title = &amp;quot;c&amp;quot;, caption = &amp;quot;Source: MovieLens&amp;quot;) +
  scale_x_continuous(breaks = 1:5) +
  theme(axis.text = element_text(size = 5),
    strip.text.x = element_text(size = 6),
    strip.text.y = element_text(size = 5, angle = 30))&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Additional markdown formatting syntax is &lt;a href=&#34;http://rmarkdown.rstudio.com/authoring_pandoc_markdown.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Wrangle - Part II</title>
      <link>/analytics6600/post/wrangle2/</link>
      <pubDate>Mon, 20 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/analytics6600/post/wrangle2/</guid>
      <description>&lt;div id=&#34;strings&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Strings&lt;/h2&gt;
&lt;p&gt;Package: &lt;code&gt;library(stringr)&lt;/code&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Creation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x &amp;lt;- &amp;quot;Richard Stallman doesn&amp;#39;t mind if you read his mail as long as you don&amp;#39;t delete it before he reads it. &amp;quot;
y &amp;lt;- &amp;#39;Richard Stallman met Chuck Norris once. Chuck tried a roundhouse, but Richard bashed him 
in the skull.&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Try creating this string&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#39;Richard Stallman&amp;#39;s beard trimmings can cure cancer. Too bad he never shaves.&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Escaping quotes to have quotes inside quotes&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#39;Richard Stallman\&amp;#39;s beard trimmings can cure cancer. Too bad he never shaves.&amp;#39;
&amp;quot;Richard Stallman gets \&amp;quot;9 bits\&amp;quot; to the byte.&amp;quot;  &lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use &lt;code&gt;writeLines&lt;/code&gt; as opposed to &lt;code&gt;print&lt;/code&gt; to show the actual string&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;writeLines(&amp;quot;Richard Stallman gets \&amp;quot;9 bits\&amp;quot; to the byte.&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Special strings signifying space:
&lt;ul&gt;
&lt;li&gt;“\n” newline&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;“\r” carriage return&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;“\t” tab&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a vector of strings:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;c(&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;d&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Number of characters (length):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;str_length(
 c(&amp;quot;Richard Stallman can solve the halting problem... in polynomial time.&amp;quot;, NA)
)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Combine strings:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;str_c(&amp;quot;hello&amp;quot;, c(&amp;quot;there&amp;quot;, &amp;quot;here&amp;quot;), sep = &amp;quot; &amp;quot;)
str_c(&amp;quot;hello&amp;quot;, c(&amp;quot;there&amp;quot;, &amp;quot;here&amp;quot;, &amp;quot;&amp;quot;), sep = &amp;quot; &amp;quot;, collapse = &amp;quot; &amp;quot;)
x &amp;lt;- &amp;quot;Class&amp;quot;
str_c(
  x,
  &amp;quot;is ...&amp;quot;,
  if (wday(Sys.time(), label = TRUE) == &amp;quot;Mon&amp;quot;) &amp;quot;on&amp;quot; else &amp;quot;off&amp;quot;,
  sep = &amp;quot; &amp;quot;
)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sub-strings:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;str_sub(&amp;quot;Richard Stallman did not write GNU Emacs, he simply read the source code from /dev/null.&amp;quot;, start = 1, end = 7)
str_sub(&amp;quot;Richard Stallman did not write GNU Emacs, he simply read the source code from /dev/null.&amp;quot;, start = -6, end = -1)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;String case:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;str_to_lower(&amp;quot;LARGE LETTERS&amp;quot;)
str_to_upper(&amp;quot;SMALL LETTERS&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;String sort:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;str_sort(c(&amp;quot;Monday&amp;quot;, &amp;quot;Tuesday&amp;quot;, &amp;quot;Saturday&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Exercise: Fix the following strings if needed, lower their case, then combine them with newline character to show one quote per line, and finally get the length of the full string.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#39;Richard Stallman doesn&amp;#39;t need sudo. I will make him a sandwich anyway.&amp;#39;
&amp;quot;Richard Stallman&amp;#39;s beard is made of parentheses.&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Regular expression:&lt;br /&gt;
I often refer to this &lt;a href=&#34;https://www.cheatography.com/davechild/cheat-sheets/regular-expressions/&#34;&gt;cheatsheet&lt;/a&gt; to remind myself of syntax. I will show only simple examples as it is better learned piece by piece as needed.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;a-b 0-9 Alpha-numerical characters&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x &amp;lt;- &amp;quot;zip code 60099&amp;quot;
str_extract(string = x, pattern = &amp;quot;zip code&amp;quot;)
str_detect(string = x, pattern = &amp;quot;60099&amp;quot;)
str_replace(string = x, pattern = &amp;quot;60099&amp;quot;, replacement = &amp;quot;60000&amp;quot;)
str_split(string = x, pattern = &amp;quot; &amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;!-) Special symbols may need escaping if they are regex syntax&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x &amp;lt;- &amp;quot;zip code @ (#60099)&amp;quot;
str_extract(string = x, pattern = &amp;quot;\\(&amp;quot;)
str_detect(string = x, pattern = &amp;quot;#&amp;quot;)
str_replace(string = x, pattern = &amp;quot;@&amp;quot;, replacement = &amp;quot;&amp;quot;)
str_split(string = x, pattern = &amp;quot; &amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;. One of any symbols&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x &amp;lt;- &amp;quot;zip code @ (#60099).&amp;quot;
str_extract(string = x, pattern = &amp;quot;z.p&amp;quot;)
str_detect(string = x, pattern = &amp;quot;co.e&amp;quot;)
str_replace_all(string = x, pattern = &amp;quot;\\.&amp;quot;, replacement = &amp;quot;!&amp;quot;)
str_split(string = x, pattern = &amp;quot;.&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Special symbols
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\\d&lt;/code&gt; digits 0 - 9&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\\s&lt;/code&gt; spaces like \n&lt;/li&gt;
&lt;li&gt;[a1@] any group of symbols&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[^a1@] ^ makes it NOT this group of symbols&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x &amp;lt;- &amp;quot;zip code @ (#60099).\n&amp;quot;
str_replace_all(string = x, pattern = &amp;quot;\\s&amp;quot;, replacement = &amp;quot; &amp;quot;)
str_detect(string = x, pattern = &amp;quot;[@#]&amp;quot;)
str_extract_all(string = x, pattern = &amp;quot;[^@#()]&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Anchors
&lt;ul&gt;
&lt;li&gt;^ front&lt;/li&gt;
&lt;li&gt;&lt;p&gt;$ back&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x &amp;lt;- &amp;quot;truth is truth&amp;quot;
str_replace_all(string = x, pattern = &amp;quot;^truth&amp;quot;, replacement = &amp;quot;lie&amp;quot;)
str_replace_all(string = x, pattern = &amp;quot;truth$&amp;quot;, replacement = &amp;quot;lie&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;| is a logical OR operator for multiple patterns&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x &amp;lt;- &amp;quot;zip code @ (#60099).\n&amp;quot;
str_replace_all(string = x, pattern = &amp;quot;\\d|[@#()]&amp;quot;, replacement = &amp;quot;&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Quantifiers
&lt;ul&gt;
&lt;li&gt;? (0 or 1 times)&lt;/li&gt;
&lt;li&gt;+ (1 or more)&lt;/li&gt;
&lt;li&gt;&lt;p&gt;* (0 or more)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x &amp;lt;- &amp;quot;groowthh&amp;quot;
str_extract_all(string = x, pattern = &amp;quot;o+&amp;quot;)
str_detect(string = x, pattern = &amp;quot;o+w?th*&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;categorical-data-with-factor-type&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Categorical Data with Factor Type&lt;/h2&gt;
&lt;p&gt;Package: &lt;code&gt;library(forcats)&lt;/code&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Create factor to represent a categorical variable&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x &amp;lt;- c(&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;)
factor(x, levels = c(&amp;quot;b&amp;quot;, &amp;quot;a&amp;quot;))&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Control levels (categories)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;factor(c(&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;), levels = c(&amp;quot;b&amp;quot;, &amp;quot;a&amp;quot;))&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reorder levels using a numerical variable&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(dplyr)
x &amp;lt;- tibble(f = factor(letters[1:4]),
        n = c(3, 1, 2, 4))
y &amp;lt;- mutate(x, f = fct_reorder(f, n, mean))&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;date-datetime-time&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Date, Datetime, Time&lt;/h2&gt;
&lt;p&gt;Package: &lt;code&gt;library(lubridate)&lt;/code&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Timestamps to datetimes&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(lubridate)
timestamp &amp;lt;- Sys.time() # creates an example timestamp
timestamp # shows timestamp
as.integer(timestamp) # shows underlying representation of timestamp
x &amp;lt;- as.integer(timestamp) # convert timestamp to integer
as_datetime(x) # convert integer to timestamp&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Range of datetimes&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Sys.time() + 1:10
range(Sys.time() + 1:10)
min(Sys.time() + 1:10)
max(Sys.time() + 1:10)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Extract pieces like days, weeks, years, hours, seconds…&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x &amp;lt;- Sys.time()
year(x)
month(x)
month(x, label = TRUE)
wday(x)
wday(x, label = TRUE)
hour(x)
minute(x)
second(x)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Strings to dates&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ymd(&amp;quot;2017-02-20&amp;quot;)
dmy(&amp;quot;01-01-1910&amp;quot;)
ymd(&amp;quot;2017-Feb-20&amp;quot;)
dmy_hms(&amp;quot;01-01-1910 23:44:56&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Wrangle - Part I</title>
      <link>/analytics6600/post/wrangle/</link>
      <pubDate>Mon, 13 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/analytics6600/post/wrangle/</guid>
      <description>&lt;div id=&#34;basic-concepts&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Basic Concepts&lt;/h1&gt;
&lt;div id=&#34;material&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Material&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tibble(x = 1:3)&lt;/code&gt; local in R&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data()&lt;/code&gt; - local in R&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;%22/Users/snikitin/Documents/training/class/analytics6600/static/data/movies.csv%22&#34;&gt;&lt;/a&gt; - local on disc&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;%22https://synikitin.github.io/analytics6600/data/movies.csv%22&#34;&gt;&lt;/a&gt; - remote on disk, direct download&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;%22https://www.quandl.com/tools/api%22&#34;&gt;&lt;/a&gt; - remote on disc, api&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;machinery&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Machinery&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;computer&lt;/li&gt;
&lt;li&gt;integrated development environment (IDE)&lt;/li&gt;
&lt;li&gt;programming language&lt;/li&gt;
&lt;li&gt;file formats&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;product&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Product&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;data&lt;/li&gt;
&lt;li&gt;clean data&lt;/li&gt;
&lt;li&gt;visualization&lt;/li&gt;
&lt;li&gt;statistical model&lt;/li&gt;
&lt;li&gt;report&lt;/li&gt;
&lt;li&gt;web application&lt;/li&gt;
&lt;li&gt;optimized algorithm&lt;/li&gt;
&lt;li&gt;package&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;task&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Task&lt;/h1&gt;
&lt;div id=&#34;io&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;IO&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;library(readr)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;library(tibble)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;tidy&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tidy&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;library(tidyr)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;transform&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Transform&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;library(dplyr)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;visualization&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Visualization&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;library(ggplot2)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;programming&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Programming&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;library(magrittr)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;learning-new-packages-and-functions&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Learning new packages and functions&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;CRAN&lt;/li&gt;
&lt;li&gt;&lt;code&gt;help(package = &amp;quot;readr&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;purpose&lt;/li&gt;
&lt;li&gt;available arguments&lt;/li&gt;
&lt;li&gt;example code, sometimes &lt;code&gt;demo(package = &amp;quot;stats&amp;quot;)&lt;/code&gt;, &lt;code&gt;example(&amp;quot;summarise&amp;quot;, package = &amp;quot;dplyr&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;tibbles&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Tibbles&lt;/h1&gt;
&lt;div id=&#34;creating&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Creating&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;tibble&lt;/code&gt; tibble( population = c(783744, 923972, 823972, 789374), city = c(“chicago”, “columbus”, “boston”, “cleveland”) )&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;tribble&lt;/code&gt; tribble( ~x, ~y, 1, “2”, 3, 4 )&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;printing&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Printing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;print(df, n, width)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;str&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;View&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;subsetting&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Subsetting&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;df[[&amp;quot;a&amp;quot;]]&lt;/code&gt;, &lt;code&gt;df[[1]]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;df$a&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;data-import&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data Import&lt;/h1&gt;
&lt;div id=&#34;read_csv&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;read_csv&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;read_csv( 
  &amp;quot;Some random text here
  a,b,c
  1,2,! #This is a comment. ! is a missing value.
  4,5,6&amp;quot;,
  skip = 2,
  na = &amp;quot;!&amp;quot;,
  comment = &amp;quot;#&amp;quot;,
  n_max = 2,
  col_names = c(&amp;quot;x&amp;quot;, &amp;quot;y&amp;quot;, &amp;quot;z&amp;quot;),
  col_types = cols(x = col_integer(),
                   y = col_double(),
                   z = col_character())
)             &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;arguments&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;arguments&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;skip&lt;/li&gt;
&lt;li&gt;comment&lt;/li&gt;
&lt;li&gt;col_names&lt;/li&gt;
&lt;li&gt;na&lt;/li&gt;
&lt;li&gt;n_max&lt;/li&gt;
&lt;li&gt;locale&lt;/li&gt;
&lt;li&gt;col_types (logical, numbers, text, date, time, datetime)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;write_csv-write_excel_csv-write_rds&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;write_csv, write_excel_csv, write_rds&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;similar arguments&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;other-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;other packages&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;haven&lt;/li&gt;
&lt;li&gt;readxl&lt;/li&gt;
&lt;li&gt;DBI&lt;/li&gt;
&lt;li&gt;jsonlite&lt;/li&gt;
&lt;li&gt;&lt;p&gt;xml2&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lets practice &lt;code&gt;read_csv&lt;/code&gt; with the following data:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;x &amp;lt;- &amp;quot;Confidential Data - Email abc@gmail.com for Permission
    $earnings,Months in 2017,store
    14343.43,January,! *Note: missing values marked with !
    34322.33,February,6343\n&amp;quot;
    
writeChar(  
  x,
  &amp;quot;readr_example.csv&amp;quot;,
  176
)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tidying-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Tidying Data&lt;/h1&gt;
&lt;div id=&#34;structure&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Structure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;columns&lt;/li&gt;
&lt;li&gt;rows&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;semantics&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Semantics&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;unit&lt;/li&gt;
&lt;li&gt;variable&lt;/li&gt;
&lt;li&gt;value&lt;/li&gt;
&lt;li&gt;observation&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;messy-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Messy data&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Column headers are values, not variable names. This is messy&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;a &amp;lt;- tribble(
  ~region, ~`$0 - $100k`, ~`$100k - $1,000k`, ~`$1,000k - $10,000k`,
  &amp;quot;midwest&amp;quot;, 152, 78, 5,
  &amp;quot;west&amp;quot;, 190, 130, 10
  )
a&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 4
##   region  `$0 - $100k` `$100k - $1,000k` `$1,000k - $10,000k`
##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;             &amp;lt;dbl&amp;gt;                &amp;lt;dbl&amp;gt;
## 1 midwest          152              78.0                 5.00
## 2 west             190             130                  10.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and this is tidy by turning headers into a variable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gather(data = a, key = income, value = count, 2:4)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##   region  income              count
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;               &amp;lt;dbl&amp;gt;
## 1 midwest $0 - $100k         152   
## 2 west    $0 - $100k         190   
## 3 midwest $100k - $1,000k     78.0 
## 4 west    $100k - $1,000k    130   
## 5 midwest $1,000k - $10,000k   5.00
## 6 west    $1,000k - $10,000k  10.0&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Multiple variables are stored in one column. This is messy&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;b &amp;lt;- tribble(
  ~`region-income`, ~count,
  &amp;quot;midwest, $0 - 100k&amp;quot;, 152,
  &amp;quot;west, $0 - 100k&amp;quot;, 190,
  &amp;quot;midwest, $100k - 1,000k&amp;quot;, 78,
  &amp;quot;west, $100k - 1,000k&amp;quot;, 130
)
b&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##   `region-income`         count
##   &amp;lt;chr&amp;gt;                   &amp;lt;dbl&amp;gt;
## 1 midwest, $0 - 100k      152  
## 2 west, $0 - 100k         190  
## 3 midwest, $100k - 1,000k  78.0
## 4 west, $100k - 1,000k    130&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and this is tidy by splitting a variable into two variables.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;separate(data = b, col = `region-income`,
         into = c(&amp;quot;region&amp;quot;, &amp;quot;income&amp;quot;), sep = &amp;quot;, &amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 3
##   region  income         count
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
## 1 midwest $0 - 100k      152  
## 2 west    $0 - 100k      190  
## 3 midwest $100k - 1,000k  78.0
## 4 west    $100k - 1,000k 130&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Variables are stored in rows. This is messy&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;d &amp;lt;- tribble(
  ~region, ~income, ~statistic,
  &amp;quot;midwest&amp;quot;, 193478374, &amp;quot;annual_max&amp;quot;,
  &amp;quot;midwest&amp;quot;, 878743, &amp;quot;annual_min&amp;quot;,
  &amp;quot;west&amp;quot;, 29743443, &amp;quot;annual_max&amp;quot;,
  &amp;quot;west&amp;quot;, 19984028, &amp;quot;annual_min&amp;quot;
)
d&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 3
##   region     income statistic 
##   &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;     
## 1 midwest 193478374 annual_max
## 2 midwest    878743 annual_min
## 3 west     29743443 annual_max
## 4 west     19984028 annual_min&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and this is tidy by turning a variable into column headers.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;spread(data = d, key = statistic, value = income)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 3
##   region  annual_max annual_min
##   &amp;lt;chr&amp;gt;        &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;
## 1 midwest  193478374     878743
## 2 west      29743443   19984028&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Multiple types of observational units are stored in the same table, in this case two separate time scales. This is messy&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;e &amp;lt;- tribble(
  ~region, ~annual_max, ~annual_min, ~monthly_avg, ~month,
  &amp;quot;midwest&amp;quot;, 193478374, 878743, 193947931, &amp;quot;January&amp;quot;,
  &amp;quot;midwest&amp;quot;, 193478374, 878743, 153394881, &amp;quot;February&amp;quot;
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and this is tidy by removing annual scale variables&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;select(e, -annual_max, -annual_min)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 3
##   region  monthly_avg month   
##   &amp;lt;chr&amp;gt;         &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;   
## 1 midwest   193947931 January 
## 2 midwest   153394881 February&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or this is tidy by removing monthly scale variables.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;select(e, -monthly_avg, -month) %&amp;gt;% 
  distinct&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 3
##   region  annual_max annual_min
##   &amp;lt;chr&amp;gt;        &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;
## 1 midwest  193478374     878743&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;A single observational unit is stored in multiple tables. This is messy&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;f &amp;lt;- tribble(
  ~region, ~income, ~statistic,
  &amp;quot;midwest&amp;quot;, 193478374, &amp;quot;annual_max&amp;quot;,
  &amp;quot;midwest&amp;quot;, 878743, &amp;quot;annual_min&amp;quot;
)
g &amp;lt;- tribble(
  ~region, ~income, ~statistic,
  &amp;quot;west&amp;quot;, 29743443, &amp;quot;annual_max&amp;quot;,
  &amp;quot;west&amp;quot;, 19984028, &amp;quot;annual_min&amp;quot;
)
f&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 3
##   region     income statistic 
##   &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;     
## 1 midwest 193478374 annual_max
## 2 midwest    878743 annual_min&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;g&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 3
##   region   income statistic 
##   &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;     
## 1 west   29743443 annual_max
## 2 west   19984028 annual_min&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and this is tidy by combining them into a single data frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bind_rows(f, g)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 3
##   region     income statistic 
##   &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;     
## 1 midwest 193478374 annual_max
## 2 midwest    878743 annual_min
## 3 west     29743443 annual_max
## 4 west     19984028 annual_min&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Tidy the following dataset. It consists of a history of quarterly earnings per share of Johnson and Johnson.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- matrix(JohnsonJohnson, byrow = TRUE, ncol = 4) %&amp;gt;% 
  as_tibble() %&amp;gt;%
  rename(quarter1 = V1, quarter2 = V2, quarter3 = V3, quarter4 = V4) %&amp;gt;% 
  mutate(year = 1960:1980, stockinfo = &amp;quot;JNJ-NYSE&amp;quot;)
df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 21 x 6
##    quarter1 quarter2 quarter3 quarter4  year stockinfo
##       &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;    
##  1    0.710    0.630    0.850    0.440  1960 JNJ-NYSE 
##  2    0.610    0.690    0.920    0.550  1961 JNJ-NYSE 
##  3    0.720    0.770    0.920    0.600  1962 JNJ-NYSE 
##  4    0.830    0.800    1.00     0.770  1963 JNJ-NYSE 
##  5    0.920    1.00     1.24     1.00   1964 JNJ-NYSE 
##  6    1.16     1.30     1.45     1.25   1965 JNJ-NYSE 
##  7    1.26     1.38     1.86     1.56   1966 JNJ-NYSE 
##  8    1.53     1.59     1.83     1.86   1967 JNJ-NYSE 
##  9    1.53     2.07     2.34     2.25   1968 JNJ-NYSE 
## 10    2.16     2.43     2.70     2.25   1969 JNJ-NYSE 
## # ... with 11 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;relational-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Relational data&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;tables and keys (primary, foreign, surrogate); key in the following data sets&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;stocks &amp;lt;- tibble(earnings = c(800, 150, 240, 65),
                 volume = c(1599500, 30531626, 4276880, 25187460),
                 symbol = c(&amp;quot;GOOG&amp;quot;, &amp;quot;APPL&amp;quot;, &amp;quot;GS&amp;quot;, &amp;quot;MSFT&amp;quot;))
stocks&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 3
##   earnings   volume symbol
##      &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; 
## 1    800    1599500 GOOG  
## 2    150   30531626 APPL  
## 3    240    4276880 GS    
## 4     65.0 25187460 MSFT&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;stocks2 &amp;lt;- tibble(earnings = c(800, 15),
                  volume = c(1599500, 13210000),
                  symbol = c(&amp;quot;GOOG&amp;quot;, &amp;quot;HBAN&amp;quot;))

symbols &amp;lt;- tibble(symbol = c(&amp;quot;GOOG&amp;quot;, &amp;quot;APPL&amp;quot;, &amp;quot;GS&amp;quot;, &amp;quot;HBAN&amp;quot;),
                  exchange = c(&amp;quot;NASDAQ&amp;quot;, &amp;quot;NASDAQ&amp;quot;, &amp;quot;NYSE&amp;quot;, &amp;quot;NASDAQ&amp;quot;))
symbols&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##   symbol exchange
##   &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;   
## 1 GOOG   NASDAQ  
## 2 APPL   NASDAQ  
## 3 GS     NYSE    
## 4 HBAN   NASDAQ&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;left, right, outer join (mutating)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;inner_join(x = stocks, y = symbols, by = &amp;quot;symbol&amp;quot;)
left_join(x = stocks, y = symbols, by = &amp;quot;symbol&amp;quot;)
right_join(x = stocks, y = symbols, by = &amp;quot;symbol&amp;quot;)
full_join(x = stocks, y = symbols, by = &amp;quot;symbol&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;semi, anti join (filtering)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;semi_join(x = stocks, y = symbols, by = &amp;quot;symbol&amp;quot;)
anti_join(x = stocks, y = symbols, by = &amp;quot;symbol&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;intersect, union, setdiff&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;union(x = stocks, y = stocks2)
intersect(x = stocks, y = stocks2)
setdiff(x = stocks, y = stocks2)
setdiff(x = stocks2, y = stocks)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Identify primary and foreign keys in all datasets&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;set.seed(349834)

calls &amp;lt;- tibble(
  company = &amp;quot;schevchenko steele&amp;quot;, #rep(companies, each = 12)
  number = rbinom(5, 30, .3),
  month = month.name[1:5] #rep(month.name, 10)
)
sales &amp;lt;- tibble(
  company = &amp;quot;schevchenko steele&amp;quot;,
  amount = rgamma(10, 1e4, 1 / 1e4),
  month = month.name[-c(1, 9)]
)
orders &amp;lt;- tibble(
  company = &amp;quot;schevchenko steele&amp;quot;,
  fullfilment = rbeta(10, 4, 8),
  month = month.name[-c(1, 9)]
) &lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Join calls and sales for only matching months&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enrich calls with whatever sales data there is&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enrich sales with whatever calls data there is&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Join calls and sales for all months&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Obtain sales data for which you have calls&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Obtain orders data for which you have no calls&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Join all datasets into a single data frame with all months&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Deep Analysis</title>
      <link>/analytics6600/project/analysis/</link>
      <pubDate>Sun, 22 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/analytics6600/project/analysis/</guid>
      <description>&lt;p&gt;Details to be determined.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R Package</title>
      <link>/analytics6600/project/package/</link>
      <pubDate>Sun, 22 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/analytics6600/project/package/</guid>
      <description>&lt;p&gt;Details to be determined.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shiny Web Application</title>
      <link>/analytics6600/project/shiny/</link>
      <pubDate>Sun, 22 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/analytics6600/project/shiny/</guid>
      <description>&lt;p&gt;Details to be determined.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
